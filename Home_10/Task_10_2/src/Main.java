import java.util.HashMap;
import java.util.Map;

public class Main { //"Дан текст, отсортировать слова в тексте по их количеству"
    public static void main(String[] args) {
        String text = "ТЕСТ 1 Когда я закончу учебу, стану программистом и найду себе работу. " +
                "Я буду старательно работать и мне заплатят зарплату. " +
                "Когда я получу ТЕСТ 2 зарплату, я перестану собирать бутылки и картон. " +
                "Я смогу купить себе еду, одежду, перестану жить на теплотрассе. " +
                "Я хорошо умоюсь, побреюсь, постригусь и расчешу волосы. " +
                "А еще я приглашу на ТЕСТ 3 свидание продавщицу по имени Таня из гастронома на улице Богдановича. " +
                "Мне нравится учиться, потому что у меня есть цель. " +
                "Миямото Мусаи учил, что у самурая не должно быть цели, только путь. " +
                "В этом заключается дуализм ТЕСТ 4 восточной философии: мы не должны стремиться к достижению цели любыми средствами, а должны достойно пройти путь к ней. " +
                "Всецелое посвящение себя пути к цели не отрицает догматики Дзен-буддизма, а доктрина дзена дополняет философию самурая поиска пути. " +
                "Продавщица Таня красивая. Я подарю ТЕСТ 5 ей цветы и шоколад. " +
                "Клен обронил последние листья. Осеннее небо все ниже. Скоро будет зима. " +
                "Trois bouteilles de vodka. ТЕСТ 6 Avec plaisir.";

        sortAndPrint(text); //запускаем метод сортировки и там же (в методе) печатаем, что получилось, в консоль

    }

    public static void sortAndPrint(final String text) { //здесь метод добавления в мапу ключей и значений
        String[] arrText = text.split("[.,:;!?\"\\s+]"); //сначала просто разбиваем в массив наш текст
        HashMap<String, Integer> map = new HashMap<>();
        int max = 0; //это число нам пригодится в следующем методе
        for (String s : arrText) { //затем массив переносим в мапу, где слово - ключ, а значение - к-во использований слова
            if ((s != null) && (!s.isEmpty())) {
                s = s.toLowerCase();
                if (map.containsKey(s.toLowerCase())) {
                    int count = map.get(s.toLowerCase()) + 1;
                    if (max < count) {
                        max = count;
                    }
                    map.put(s, count);
                } else {
                    map.put(s, 1);
                }
            }
        }
        printKeys(map, max);
    }

    private static void printKeys(final HashMap<String, Integer> map, final int max) { //отсортировать мапу по значению я не смог, поэтому просто выводу в нужной последовательности данные
        int localMax = max;
        while (localMax > 0) {
            for (Map.Entry<String, Integer> me : map.entrySet()) { //начиная с максимального числа - вывожу ключ и значение
                int temp = me.getValue();
                if (temp == localMax) {
                    System.out.println(me.getKey() + " - " + temp);
                }
            }
            localMax--;
        }
    }
}